<?php

namespace ContainerXCjKscP;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getExecutePostActionsService extends Contao_ManagerBundle_HttpKernel_ContaoKernelDevDebugContainer
{
    /**
     * Gets the public 'MenAtWork\MultiColumnWizardBundle\EventListener\Contao\ExecutePostActions' shared service.
     *
     * @return \MenAtWork\MultiColumnWizardBundle\EventListener\Contao\ExecutePostActions
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/menatwork/contao-multicolumnwizard-bundle/src/EventListener/BaseListener.php';
        include_once \dirname(__DIR__, 4).'/vendor/menatwork/contao-multicolumnwizard-bundle/src/EventListener/Contao/ExecutePostActions.php';

        return $container->services['MenAtWork\\MultiColumnWizardBundle\\EventListener\\Contao\\ExecutePostActions'] = new \MenAtWork\MultiColumnWizardBundle\EventListener\Contao\ExecutePostActions(($container->services['event_dispatcher'] ?? self::getEventDispatcherService($container)), ($container->services['MenAtWork\\MultiColumnWizardBundle\\Service\\ContaoApiService'] ?? $container->load('getContaoApiServiceService')), ($container->services['monolog.logger.contao'] ?? $container->load('getMonolog_Logger_ContaoService')));
    }
}
