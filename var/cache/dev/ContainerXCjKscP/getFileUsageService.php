<?php

namespace ContainerXCjKscP;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getFileUsageService extends Contao_ManagerBundle_HttpKernel_ContaoKernelDevDebugContainer
{
    /**
     * Gets the public 'Sineos\FileManagerBundle\Controller\FileUsage' shared autowired service.
     *
     * @return \Sineos\FileManagerBundle\Controller\FileUsage
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/sineos/filemanager-bundle/src/Controller/FileUsage.php';

        $container->services['Sineos\\FileManagerBundle\\Controller\\FileUsage'] = $instance = new \Sineos\FileManagerBundle\Controller\FileUsage(($container->services['contao.image.factory'] ?? $container->load('getContao_Image_FactoryService')), ($container->privates['parameter_bag'] ??= new \Symfony\Component\DependencyInjection\ParameterBag\ContainerBag($container)), ($container->services['contao.image.studio'] ?? $container->load('getContao_Image_StudioService')));

        $instance->setContainer(($container->privates['.service_locator.O2p6Lk7'] ?? $container->load('get_ServiceLocator_O2p6Lk7Service'))->withContext('Sineos\\FileManagerBundle\\Controller\\FileUsage', $container));

        return $instance;
    }
}
