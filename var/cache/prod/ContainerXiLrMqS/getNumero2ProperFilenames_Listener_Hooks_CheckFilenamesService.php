<?php

namespace ContainerXiLrMqS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getNumero2ProperFilenames_Listener_Hooks_CheckFilenamesService extends Contao_ManagerBundle_HttpKernel_ContaoKernelProdContainer
{
    /*
     * Gets the public 'numero2_proper_filenames.listener.hooks.check_filenames' shared service.
     *
     * @return \numero2\ProperFilenamesBundle\EventListener\Hooks\CheckFilenamesListener
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/numero2/contao-proper-filenames/src/EventListener/Hooks/CheckFilenamesListener.php';

        return $container->services['numero2_proper_filenames.listener.hooks.check_filenames'] = new \numero2\ProperFilenamesBundle\EventListener\Hooks\CheckFilenamesListener(($container->services['request_stack'] ??= new \Symfony\Component\HttpFoundation\RequestStack()), ($container->services['router'] ?? self::getRouterService($container)), ($container->services['contao.routing.scope_matcher'] ?? self::getContao_Routing_ScopeMatcherService($container)), ($container->services['translator'] ?? self::getTranslatorService($container)));
    }
}
