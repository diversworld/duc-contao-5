<?php

namespace ContainerXiLrMqS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getLogUnsuccessfulDeliveriesService extends Contao_ManagerBundle_HttpKernel_ContaoKernelProdContainer
{
    /*
     * Gets the private 'Terminal42\NotificationCenterBundle\EventListener\LogUnsuccessfulDeliveries' shared service.
     *
     * @return \Terminal42\NotificationCenterBundle\EventListener\LogUnsuccessfulDeliveries
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/terminal42/notification_center/src/EventListener/LogUnsuccessfulDeliveries.php';

        return $container->privates['Terminal42\\NotificationCenterBundle\\EventListener\\LogUnsuccessfulDeliveries'] = new \Terminal42\NotificationCenterBundle\EventListener\LogUnsuccessfulDeliveries(($container->services['monolog.logger.contao.error'] ?? self::getMonolog_Logger_Contao_ErrorService($container)));
    }
}
