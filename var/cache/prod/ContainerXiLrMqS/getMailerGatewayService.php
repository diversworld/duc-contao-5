<?php

namespace ContainerXiLrMqS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getMailerGatewayService extends Contao_ManagerBundle_HttpKernel_ContaoKernelProdContainer
{
    /*
     * Gets the private 'Terminal42\NotificationCenterBundle\Gateway\MailerGateway' shared service.
     *
     * @return \Terminal42\NotificationCenterBundle\Gateway\MailerGateway
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/terminal42/notification_center/src/Gateway/GatewayInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/terminal42/notification_center/src/Gateway/AbstractGateway.php';
        include_once \dirname(__DIR__, 4).'/vendor/terminal42/notification_center/src/Gateway/MailerGateway.php';

        $a = ($container->privates['contao.filesystem.virtual.files'] ?? $container->load('getContao_Filesystem_Virtual_FilesService'));

        if (isset($container->privates['Terminal42\\NotificationCenterBundle\\Gateway\\MailerGateway'])) {
            return $container->privates['Terminal42\\NotificationCenterBundle\\Gateway\\MailerGateway'];
        }
        $b = ($container->services['mailer'] ?? $container->load('getMailerService'));

        if (isset($container->privates['Terminal42\\NotificationCenterBundle\\Gateway\\MailerGateway'])) {
            return $container->privates['Terminal42\\NotificationCenterBundle\\Gateway\\MailerGateway'];
        }

        $container->privates['Terminal42\\NotificationCenterBundle\\Gateway\\MailerGateway'] = $instance = new \Terminal42\NotificationCenterBundle\Gateway\MailerGateway(($container->services['contao.framework'] ?? self::getContao_FrameworkService($container)), $a, $b);

        $instance->setContainer(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'bulky_item_storage' => ['privates', 'Terminal42\\NotificationCenterBundle\\BulkyItem\\BulkyItemStorage', 'getBulkyItemStorageService', true],
            'insert_tag_parser' => ['services', 'contao.insert_tag.parser', 'getContao_InsertTag_ParserService', true],
            'notification_center' => ['privates', 'Terminal42\\NotificationCenterBundle\\NotificationCenter', 'getNotificationCenterService', true],
            'simple_token_parser' => ['services', 'contao.string.simple_token_parser', 'getContao_String_SimpleTokenParserService', true],
        ], [
            'bulky_item_storage' => '?',
            'insert_tag_parser' => '?',
            'notification_center' => '?',
            'simple_token_parser' => '?',
        ]));

        return $instance;
    }
}
