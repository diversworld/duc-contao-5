<?php

namespace ContainerXCjKscP;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getAnonymizeIpCommand_LazyService extends Contao_ManagerBundle_HttpKernel_ContaoKernelDevDebugContainer
{
    /**
     * Gets the private '.Oveleon\ContaoCookiebar\Command\AnonymizeIpCommand.lazy' shared service.
     *
     * @return \Symfony\Component\Console\Command\LazyCommand
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/LazyCommand.php';

        return $container->privates['.Oveleon\\ContaoCookiebar\\Command\\AnonymizeIpCommand.lazy'] = new \Symfony\Component\Console\Command\LazyCommand('cookiebar:anonymizeip', [], 'Anonymizes all IP addresses in the log', false, #[\Closure(name: 'Oveleon\\ContaoCookiebar\\Command\\AnonymizeIpCommand')] fn (): \Oveleon\ContaoCookiebar\Command\AnonymizeIpCommand => ($container->services['Oveleon\\ContaoCookiebar\\Command\\AnonymizeIpCommand'] ?? $container->load('getAnonymizeIpCommandService')));
    }
}
