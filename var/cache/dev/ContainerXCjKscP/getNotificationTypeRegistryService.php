<?php

namespace ContainerXCjKscP;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getNotificationTypeRegistryService extends Contao_ManagerBundle_HttpKernel_ContaoKernelDevDebugContainer
{
    /**
     * Gets the private 'Terminal42\NotificationCenterBundle\NotificationType\NotificationTypeRegistry' shared service.
     *
     * @return \Terminal42\NotificationCenterBundle\NotificationType\NotificationTypeRegistry
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/terminal42/notification_center/src/NotificationType/NotificationTypeRegistry.php';

        return $container->privates['Terminal42\\NotificationCenterBundle\\NotificationType\\NotificationTypeRegistry'] = new \Terminal42\NotificationCenterBundle\NotificationType\NotificationTypeRegistry(new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['Terminal42\\NotificationCenterBundle\\NotificationType\\FormGeneratorNotificationType'] ?? $container->load('getFormGeneratorNotificationTypeService'));
            yield 1 => ($container->privates['Terminal42\\NotificationCenterBundle\\NotificationType\\LostPasswordNotificationType'] ?? $container->load('getLostPasswordNotificationTypeService'));
            yield 2 => ($container->privates['Terminal42\\NotificationCenterBundle\\NotificationType\\MemberActivationNotificationType'] ?? $container->load('getMemberActivationNotificationTypeService'));
            yield 3 => ($container->privates['Terminal42\\NotificationCenterBundle\\NotificationType\\MemberRegistrationNotificationType'] ?? $container->load('getMemberRegistrationNotificationTypeService'));
            yield 4 => ($container->privates['Terminal42\\NotificationCenterBundle\\NotificationType\\MemberPersonalDataNotificationType'] ?? $container->load('getMemberPersonalDataNotificationTypeService'));
            yield 5 => ($container->privates['Terminal42\\NotificationCenterBundle\\NotificationType\\Newsletter\\NewsletterActivateNotificationType'] ?? $container->load('getNewsletterActivateNotificationTypeService'));
            yield 6 => ($container->privates['Terminal42\\NotificationCenterBundle\\NotificationType\\Newsletter\\NewsletterSubscribeNotificationType'] ?? $container->load('getNewsletterSubscribeNotificationTypeService'));
            yield 7 => ($container->privates['Terminal42\\NotificationCenterBundle\\NotificationType\\Newsletter\\NewsletterUnsubscribeNotificationType'] ?? $container->load('getNewsletterUnsubscribeNotificationTypeService'));
            yield 8 => ($container->privates['Cgoit\\LeadsOptinBundle\\NotificationType\\LeadsOptinNotification'] ?? $container->load('getLeadsOptinNotificationService'));
            yield 9 => ($container->privates['Cgoit\\LeadsOptinBundle\\NotificationType\\LeadsOptinSuccessNotification'] ?? $container->load('getLeadsOptinSuccessNotificationService'));
            yield 10 => ($container->privates['InspiredMinds\\ContaoEventRegistration\\NotificationType\\EventRegistrationCancelNotificationType'] ??= new \InspiredMinds\ContaoEventRegistration\NotificationType\EventRegistrationCancelNotificationType());
            yield 11 => ($container->privates['InspiredMinds\\ContaoEventRegistration\\NotificationType\\EventRegistrationConfirmNotificationType'] ??= new \InspiredMinds\ContaoEventRegistration\NotificationType\EventRegistrationConfirmNotificationType());
            yield 12 => ($container->privates['InspiredMinds\\ContaoEventRegistration\\NotificationType\\EventRegistrationWaitingListAdvancementNotificationType'] ??= new \InspiredMinds\ContaoEventRegistration\NotificationType\EventRegistrationWaitingListAdvancementNotificationType());
            yield 13 => ($container->services['Terminal42\\NewsNewsletterBundle\\NotificationCenter\\NewsNewsletterNotificationType'] ?? $container->load('getNewsNewsletterNotificationTypeService'));
        }, 14));
    }
}
