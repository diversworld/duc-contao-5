<?php

namespace ContainerXiLrMqS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getExecutePostActionsListenerService extends Contao_ManagerBundle_HttpKernel_ContaoKernelProdContainer
{
    /*
     * Gets the public 'HeimrichHannot\MultiColumnEditorBundle\EventListener\Contao\ExecutePostActionsListener' shared autowired service.
     *
     * @return \HeimrichHannot\MultiColumnEditorBundle\EventListener\Contao\ExecutePostActionsListener
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/heimrichhannot/contao-multi-column-editor-bundle/src/EventListener/Contao/ExecutePostActionsListener.php';

        return $container->services['HeimrichHannot\\MultiColumnEditorBundle\\EventListener\\Contao\\ExecutePostActionsListener'] = new \HeimrichHannot\MultiColumnEditorBundle\EventListener\Contao\ExecutePostActionsListener(($container->privates['monolog.logger'] ?? self::getMonolog_LoggerService($container)), ($container->services['request_stack'] ??= new \Symfony\Component\HttpFoundation\RequestStack()), ($container->services['HeimrichHannot\\UtilsBundle\\Util\\Utils'] ?? self::getUtilsService($container)));
    }
}
