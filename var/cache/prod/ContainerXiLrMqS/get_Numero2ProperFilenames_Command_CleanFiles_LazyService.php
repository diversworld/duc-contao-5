<?php

namespace ContainerXiLrMqS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_Numero2ProperFilenames_Command_CleanFiles_LazyService extends Contao_ManagerBundle_HttpKernel_ContaoKernelProdContainer
{
    /*
     * Gets the private '.numero2_proper_filenames.command.clean_files.lazy' shared service.
     *
     * @return \Symfony\Component\Console\Command\LazyCommand
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/LazyCommand.php';

        return $container->privates['.numero2_proper_filenames.command.clean_files.lazy'] = new \Symfony\Component\Console\Command\LazyCommand('contao:proper-filenames:sanitize', [], 'Sanitizes the file and folder names of the given path inside contao files folder.', false, #[\Closure(name: 'numero2_proper_filenames.command.clean_files', class: 'numero2\\ProperFilenamesBundle\\Command\\CleanFilesCommand')] fn (): \numero2\ProperFilenamesBundle\Command\CleanFilesCommand => ($container->privates['numero2_proper_filenames.command.clean_files'] ?? $container->load('getNumero2ProperFilenames_Command_CleanFilesService')));
    }
}
