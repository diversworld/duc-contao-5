<?php

namespace ContainerXiLrMqS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getMonolog_Handler_VisitorsService extends Contao_ManagerBundle_HttpKernel_ContaoKernelProdContainer
{
    /*
     * Gets the private 'monolog.handler.visitors' shared service.
     *
     * @return \Monolog\Handler\RotatingFileHandler
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/monolog/monolog/src/Monolog/Formatter/FormatterInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php';
        include_once \dirname(__DIR__, 4).'/vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php';

        $container->privates['monolog.handler.visitors'] = $instance = new \Monolog\Handler\RotatingFileHandler((\dirname(__DIR__, 3).'/logs/prod.log'), 0, 'DEBUG', true, NULL, false);

        $instance->pushProcessor(($container->privates['monolog.processor.psr_log_message'] ??= new \Monolog\Processor\PsrLogMessageProcessor()));
        $instance->setFilenameFormat('{filename}-{date}', 'Y-m-d');
        $instance->setFormatter(new \Monolog\Formatter\LineFormatter());

        return $instance;
    }
}
