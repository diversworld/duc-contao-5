<?php

namespace ContainerXiLrMqS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getGroupWidgetListenerService extends Contao_ManagerBundle_HttpKernel_ContaoKernelProdContainer
{
    /*
     * Gets the public 'Mvo\ContaoGroupWidget\EventListener\GroupWidgetListener' shared service.
     *
     * @return \Mvo\ContaoGroupWidget\EventListener\GroupWidgetListener
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/mvo/contao-group-widget/src/EventListener/GroupWidgetListener.php';
        include_once \dirname(__DIR__, 4).'/vendor/mvo/contao-group-widget/src/Group/Registry.php';

        $a = ($container->services['request_stack'] ??= new \Symfony\Component\HttpFoundation\RequestStack());
        $b = ($container->services['twig'] ?? self::getTwigService($container));

        return $container->services['Mvo\\ContaoGroupWidget\\EventListener\\GroupWidgetListener'] = new \Mvo\ContaoGroupWidget\EventListener\GroupWidgetListener($a, new \Mvo\ContaoGroupWidget\Group\Registry($b, $a, ($container->services['doctrine.dbal.default_connection'] ?? self::getDoctrine_Dbal_DefaultConnectionService($container)), new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['Mvo\\ContaoGroupWidget\\Storage\\SerializedStorageFactory'] ?? $container->load('getSerializedStorageFactoryService'));
            yield 1 => ($container->privates['Mvo\\ContaoGroupWidget\\Storage\\EntityStorageFactory'] ?? $container->load('getEntityStorageFactoryService'));
        }, 2)), $b);
    }
}
