<?php

namespace ContainerXiLrMqS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getEntityFinderCommand_LazyService extends Contao_ManagerBundle_HttpKernel_ContaoKernelProdContainer
{
    /*
     * Gets the private '.HeimrichHannot\UtilsBundle\Command\EntityFinderCommand.lazy' shared service.
     *
     * @return \Symfony\Component\Console\Command\LazyCommand
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/LazyCommand.php';

        return $container->privates['.HeimrichHannot\\UtilsBundle\\Command\\EntityFinderCommand.lazy'] = new \Symfony\Component\Console\Command\LazyCommand('huh:utils:entity_finder', [], 'A command to find where an entity is included.', false, #[\Closure(name: 'HeimrichHannot\\UtilsBundle\\Command\\EntityFinderCommand')] fn (): \HeimrichHannot\UtilsBundle\Command\EntityFinderCommand => ($container->privates['HeimrichHannot\\UtilsBundle\\Command\\EntityFinderCommand'] ?? $container->load('getEntityFinderCommandService')));
    }
}
