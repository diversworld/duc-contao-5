<?php

namespace ContainerXCjKscP;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getWaitingListCheckerService extends Contao_ManagerBundle_HttpKernel_ContaoKernelDevDebugContainer
{
    /**
     * Gets the private 'InspiredMinds\ContaoEventRegistration\WaitingListChecker' shared autowired service.
     *
     * @return \InspiredMinds\ContaoEventRegistration\WaitingListChecker
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/inspiredminds/contao-event-registration/src/WaitingListChecker.php';

        $a = ($container->privates['lock.default.factory'] ?? $container->load('getLock_Default_FactoryService'));

        if (isset($container->privates['InspiredMinds\\ContaoEventRegistration\\WaitingListChecker'])) {
            return $container->privates['InspiredMinds\\ContaoEventRegistration\\WaitingListChecker'];
        }
        $b = ($container->privates['InspiredMinds\\ContaoEventRegistration\\EventRegistration'] ?? $container->load('getEventRegistrationService'));

        if (isset($container->privates['InspiredMinds\\ContaoEventRegistration\\WaitingListChecker'])) {
            return $container->privates['InspiredMinds\\ContaoEventRegistration\\WaitingListChecker'];
        }
        $c = ($container->privates['Terminal42\\NotificationCenterBundle\\NotificationCenter'] ?? $container->load('getNotificationCenterService'));

        if (isset($container->privates['InspiredMinds\\ContaoEventRegistration\\WaitingListChecker'])) {
            return $container->privates['InspiredMinds\\ContaoEventRegistration\\WaitingListChecker'];
        }

        return $container->privates['InspiredMinds\\ContaoEventRegistration\\WaitingListChecker'] = new \InspiredMinds\ContaoEventRegistration\WaitingListChecker(($container->services['contao.framework'] ?? self::getContao_FrameworkService($container)), $a, $b, $c);
    }
}
