<?php

namespace ContainerXiLrMqS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getFormatterUtilService extends Contao_ManagerBundle_HttpKernel_ContaoKernelProdContainer
{
    /*
     * Gets the private 'HeimrichHannot\UtilsBundle\Util\FormatterUtil' shared autowired service.
     *
     * @return \HeimrichHannot\UtilsBundle\Util\FormatterUtil
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/heimrichhannot/contao-utils-bundle/src/Util/FormatterUtil.php';

        $a = ($container->services['contao.insert_tag.parser'] ?? $container->load('getContao_InsertTag_ParserService'));

        if (isset($container->privates['HeimrichHannot\\UtilsBundle\\Util\\FormatterUtil'])) {
            return $container->privates['HeimrichHannot\\UtilsBundle\\Util\\FormatterUtil'];
        }
        $b = ($container->services['HeimrichHannot\\UtilsBundle\\Util\\Utils'] ?? self::getUtilsService($container));

        if (isset($container->privates['HeimrichHannot\\UtilsBundle\\Util\\FormatterUtil'])) {
            return $container->privates['HeimrichHannot\\UtilsBundle\\Util\\FormatterUtil'];
        }

        return $container->privates['HeimrichHannot\\UtilsBundle\\Util\\FormatterUtil'] = new \HeimrichHannot\UtilsBundle\Util\FormatterUtil(($container->services['contao.framework'] ?? self::getContao_FrameworkService($container)), $a, $b, $container->parameters['kernel.bundles']);
    }
}
